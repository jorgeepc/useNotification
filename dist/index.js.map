{"version":3,"file":"index.js","sources":["../src/Notifications/EventEmitter.ts","../src/Notifications/state.ts","../src/Notifications/Portal.tsx","../src/tokens/colors.ts","../src/components/Text/Text.tsx","../src/tokens/fonts.ts","../src/components/Toast/Toast.tsx","../src/tokens/spacing.ts","../src/Notifications/Notifications.tsx","../src/notificationContext.tsx"],"sourcesContent":["interface Events {\n  [key: string]: Function[]\n}\n\nexport interface Unsubscribe {\n  unsubscribe(): any\n}\n\nexport class EventEmitter {\n  private events: Events\n  public constructor(initialEvents?: Events) {\n    this.events = initialEvents || {}\n  }\n\n  public subscribe(name: string, cb: Function): Unsubscribe {\n    ;(this.events[name] || (this.events[name] = [])).push(cb)\n\n    return {\n      unsubscribe: () =>\n        this.events[name] &&\n        this.events[name].splice(this.events[name].indexOf(cb) >>> 0, 1),\n    }\n  }\n\n  public emit(name: string, ...args: any[]): void {\n    ;(this.events[name] || []).forEach(fn => fn(...args))\n  }\n}\n","import { EventEmitter, Unsubscribe } from './EventEmitter'\nimport { Notification } from './'\n\nexport class NotificationState {\n  private readonly _eventEmitter = new EventEmitter()\n\n  public subscribeToAddNotification(callback: Function): Unsubscribe {\n    return this._eventEmitter.subscribe('addNotification', callback)\n  }\n\n  public addNotification(notification: Notification): string {\n    const id = notification.id\n    this._eventEmitter.emit('addNotification', notification)\n    return id\n  }\n}\n","import React from 'react'\nimport ReactDom from 'react-dom'\n\ninterface Props {\n  children: React.ReactNode\n}\n\nfunction Portal({ children }: Props): React.ReactPortal {\n  return ReactDom.createPortal(<div>{children}</div>, document.body)\n}\n\nexport default Portal\n","const colors = {\n  base: {\n    white: '#FFF',\n    black: '#000',\n    default: '#252529',\n\n    gray: '#4E5974',\n    grayLight: '#A0AAAD',\n    grayLightest: '#E1E6EA',\n\n    purple: '#662482',\n    purpleLight: '#d1c1ff',\n\n    blueDark: '#097093',\n    blue: '#3BC0F2',\n    blueLight: '#DBF4FD',\n\n    greenDark: '#00946e',\n    green: '#3FD5AE',\n    greenLight: '#aaf3e0',\n\n    yellowDark: '#987800',\n    yellow: '#FFC900',\n    yellowLight: '#ffeca4',\n\n    redDark: '#a22b31',\n    red: '#FE6068',\n    redLight: '#ffbbbe',\n  },\n}\n\nexport default colors\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { colors, fonts } from '../../tokens'\n\ninterface Props {\n  /** Inner content of the span tag */\n  children: string\n  /** Set white color for use in dark background */\n  white?: boolean\n}\n\nconst Text = ({ children, white = false }: Props) => (\n  <Wrapper white={white}>{children}</Wrapper>\n)\n\nconst Wrapper = styled.span<Props>`\n  font-family: ${fonts.family.default};\n  font-size: ${fonts.size.default};\n  font-weight: ${fonts.weight.normal};\n  color: ${colors.base.default};\n  ${props =>\n    props.white &&\n    css`\n      color: ${colors.base.white};\n    `}\n`\n\nexport default Text\n","const fonts = {\n  family: {\n    default:\n      '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;',\n  },\n  weight: {\n    normal: 400,\n    medium: 600,\n    bold: 700,\n  },\n  size: {\n    small: '12px',\n    default: '14px',\n    medium: '20px',\n    large: '30px',\n  },\n}\n\nexport default fonts\n","import React from 'react'\nimport styled from 'styled-components'\nimport Text from '../Text'\nimport { colors, spacing } from '../../tokens'\n\nexport type NotificationStatus = 'default' | 'success' | 'warning' | 'error'\n\nexport interface Notification {\n  id: string\n  createdAt: number\n  title?: string\n  message: string\n  status: NotificationStatus\n}\n\nfunction getColor(\n  status: NotificationStatus,\n): { color: string; background: string } {\n  const color = { color: colors.base.white }\n  switch (status) {\n    case 'default':\n      return { color: colors.base.default, background: colors.base.white }\n    case 'success':\n      return { ...color, background: colors.base.green }\n    case 'warning':\n      return { ...color, background: colors.base.yellow }\n    case 'error':\n      return { ...color, background: colors.base.red }\n  }\n}\n\ninterface Props {\n  notification: Notification\n  remove(id: string): void\n  getRef?: React.LegacyRef<HTMLDivElement>\n}\n\nfunction Toast({ notification, remove, getRef }: Props) {\n  const color = getColor(notification.status)\n  const textProps = notification.status !== 'default' ? { white: true } : {}\n\n  function handleClick(): void {\n    remove(notification.id)\n  }\n\n  return (\n    <Wrapper ref={getRef as any}>\n      <Content {...color} data-testid=\"content-div\">\n        <Text {...textProps}>{notification.message}</Text>\n        <Close onClick={handleClick} data-testid=\"close-div\">\n          <svg fill=\"currentColor\" height=\"1em\" width=\"1em\" viewBox=\"0 0 40 40\">\n            <path d=\"m31.6 10.7l-9.3 9.3 9.3 9.3-2.3 2.3-9.3-9.3-9.3 9.3-2.3-2.3 9.3-9.3-9.3-9.3 2.3-2.3 9.3 9.3 9.3-9.3z\"></path>\n          </svg>\n        </Close>\n      </Content>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  width: 420px;\n  transition: all 0.4s ease 0s;\n  box-sizing: border-box;\n  &:focus {\n    outline: none;\n  }\n`\n\ninterface ContentProps {\n  color: string\n  background: string\n}\n\nconst Content = styled.div<ContentProps>`\n  background: ${props => props.background};\n  color: ${props => props.color};\n  width: 420px;\n  min-height: 60px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border: 0px none;\n  border-radius: 5px;\n  padding: ${spacing.xsmall} ${spacing.small};\n  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.12);\n  box-sizing: border-box;\n`\n\nconst Close = styled.div`\n  svg {\n    opacity: 1;\n    cursor: pointer;\n    transition: opacity 0.3s ease 0s;\n  }\n  svg:hover {\n    opacity: 0.75;\n  }\n`\n\nexport default Toast\n","const unit = 4\n\nconst spacing = {\n  xxsmall: unit + 'px',\n  xsmall: unit * 2 + 'px',\n  small: unit * 4 + 'px',\n  medium: unit * 6 + 'px',\n  large: unit * 8 + 'px',\n  xlarge: unit * 10 + 'px',\n  xxlarge: unit * 14 + 'px',\n}\n\nexport default spacing\n","import React, { useCallback, useEffect, useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { useTransition, animated } from 'react-spring'\nimport Portal from './Portal'\nimport Toast from '../components/Toast'\nimport { NotificationState } from './state'\nimport { Notification } from './'\n\nfunction Notifications({ state }: { state: NotificationState }) {\n  const [notificationsToShow, setNotificationsToShow] = useState<\n    Notification[]\n  >([])\n\n  const [refMap] = useState<WeakMap<Notification, HTMLDivElement>>(\n    () => new WeakMap<Notification, HTMLDivElement>(),\n  )\n\n  const mouseOverRef = useRef(false)\n\n  const transitions = useTransition<\n    Notification,\n    { opacity: number; height: number }\n  >(notificationsToShow, notification => notification.id, {\n    from: { opacity: 0, height: 0 },\n    // @ts-ignore: not typed properly in react-spring\n    enter: item => async next =>\n      await next({\n        opacity: 1,\n        // @ts-ignore: not typed properly in react-spring\n        height: refMap.get(item) ? refMap.get(item).offsetHeight + 10 : 0,\n      }),\n    leave: { opacity: 0, height: 0 },\n  })\n\n  const removeNotification = useCallback((id: string) => {\n    setNotificationsToShow(notifications => {\n      const filteredNotifications = notifications.filter(\n        notification => notification.id !== id,\n      )\n\n      if (filteredNotifications.length !== notifications.length) {\n        return filteredNotifications\n      }\n\n      return notifications\n    })\n  }, [])\n\n  useEffect(() => {\n    const subscription = state.subscribeToAddNotification(\n      (event: Notification) => {\n        setNotificationsToShow(notifications => [...notifications, event])\n      },\n    )\n\n    return () => {\n      subscription.unsubscribe()\n    }\n  }, [state])\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (mouseOverRef.current) {\n        return\n      }\n\n      setNotificationsToShow(notifications => {\n        const filteredNotifications = notifications.filter(\n          notification => Date.now() < notification.createdAt + 10000,\n        )\n\n        if (filteredNotifications.length !== notifications.length) {\n          return filteredNotifications\n        }\n\n        return notifications\n      })\n    }, 100)\n\n    return () => {\n      clearInterval(interval)\n    }\n  }, [])\n\n  function handleMouseEnter(): void {\n    mouseOverRef.current = true\n  }\n\n  function handleMouseLeave(): void {\n    mouseOverRef.current = false\n  }\n\n  return (\n    <Portal>\n      <Container\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        {transitions.map(\n          ({\n            item,\n            key,\n            props,\n          }: {\n            item: Notification\n            key: string\n            props: object\n          }) => (\n            <animated.div key={key} style={props}>\n              <Toast\n                getRef={ref => ref && refMap.set(item, ref)}\n                notification={item}\n                remove={removeNotification}\n              />\n            </animated.div>\n          ),\n        )}\n      </Container>\n    </Portal>\n  )\n}\n\nconst Container = styled.div`\n  position: fixed;\n  bottom: 10px;\n  right: 20px;\n  max-width: 420px;\n  z-index: 2000;\n  box-sizing: border-box;\n`\n\nexport default Notifications\n","import React, { useContext } from 'react'\nimport uuidv4 from 'uuid'\nimport Notifications, { NotificationStatus } from './Notifications'\nimport { NotificationState } from './Notifications/state'\n\ninterface ContextInterface {\n  notify(message: string, status?: NotificationStatus): void\n}\n\ninterface Props {\n  children: React.ReactNode\n  state: NotificationState\n}\n\nconst NotificationContext = React.createContext<ContextInterface | undefined>(\n  undefined,\n)\n\nfunction NotificationProvider({ children, state }: Props) {\n  const notify = (\n    message: string,\n    status: NotificationStatus = 'default',\n  ): void => {\n    state.addNotification({\n      id: uuidv4(),\n      createdAt: Date.now(),\n      message,\n      status,\n    })\n  }\n\n  return (\n    <NotificationContext.Provider value={{ notify }}>\n      <Notifications state={state} />\n      {children}\n    </NotificationContext.Provider>\n  )\n}\n\nfunction useNotification() {\n  const context = useContext(NotificationContext)\n  if (context === undefined) {\n    throw new Error(\n      `useNotification must be used within a NotificationProvider`,\n    )\n  }\n  return context\n}\n\nexport { NotificationProvider, useNotification }\n"],"names":["EventEmitter","constructor","initialEvents","events","subscribe","name","cb","this","push","unsubscribe","splice","indexOf","emit","forEach","fn","args","NotificationState","Portal","ref","ReactDom","createPortal","React","document","body","subscribeToAddNotification","callback","_eventEmitter","addNotification","notification","id","const","colors","base","white","black","default","gray","grayLight","grayLightest","purple","purpleLight","blueDark","blue","blueLight","greenDark","green","greenLight","yellowDark","yellow","yellowLight","redDark","red","redLight","Text","Wrapper","styled","span","props","css","Toast","color","status","background","Object","getColor","textProps","getRef","Content","data-testid","message","Close","onClick","remove","fill","height","width","viewBox","d","div","unit","Notifications","useState","WeakMap","mouseOverRef","useRef","transitions","useTransition","notificationsToShow","from","opacity","enter","item","next","refMap","get","offsetHeight","leave","removeNotification","useCallback","setNotificationsToShow","notifications","filteredNotifications","filter","length","useEffect","subscription","state","event","interval","setInterval","current","Date","now","createdAt","clearInterval","Container","onMouseEnter","onMouseLeave","map","animated","key","style","set","NotificationContext","createContext","undefined","Provider","value","uuidv4","children","context","useContext","Error"],"mappings":"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"}